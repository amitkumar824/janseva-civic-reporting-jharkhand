import React, { useState, useEffect } from 'react';
import { BarChart3, TrendingUp, Users, Clock, MapPin, Filter, Download, Search } from 'lucide-react';
import { useAuth } from '../context/AuthContext';
import { useLanguage } from '../context/LanguageContext';
import { useNavigate } from 'react-router-dom';
import Header from './Header';

interface Issue {
  id: string;
  title: string;
  description: string;
  category: string;
  status: 'submitted' | 'acknowledged' | 'assigned' | 'in_progress' | 'resolved' | 'rejected';
  priority: 1 | 2 | 3;
  location: string;
  reporterName: string;
  createdAt: string;
  department?: string;
}

const AdminDashboard: React.FC = () => {
  const [issues, setIssues] = useState<Issue[]>([]);
  const [loading, setLoading] = useState(true);
  const [filter, setFilter] = useState({
    status: 'all',
    category: 'all',
    priority: 'all'
  });
  const [searchTerm, setSearchTerm] = useState('');
  
  const { user } = useAuth();
  const { t } = useLanguage();
  const navigate = useNavigate();

  useEffect(() => {
    // Mock data loading
    setTimeout(() => {
      setIssues([
        {
          id: '1',
          title: '‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ü ‡§≤‡§æ‡§á‡§ü ‡§ñ‡§∞‡§æ‡§¨ ‡§π‡•à',
          description: '‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∞‡•ã‡§° ‡§™‡§∞ ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ü ‡§≤‡§æ‡§á‡§ü ‡§ï‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∞‡§π‡•Ä',
          category: 'streetlight',
          status: 'submitted',
          priority: 2,
          location: '‡§ï‡§®‡•â‡§ü ‡§™‡•ç‡§≤‡•á‡§∏, ‡§®‡§à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
          reporterName: '‡§∞‡§æ‡§π‡•Å‡§≤ ‡§∂‡§∞‡•ç‡§Æ‡§æ',
          createdAt: '2025-01-08T10:00:00Z',
          department: '‡§á‡§≤‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡§ø‡§ï‡§≤'
        },
        {
          id: '2',
          title: '‡§∏‡§°‡§º‡§ï ‡§Æ‡•á‡§Ç ‡§ó‡§°‡•ç‡§¢‡•á',
          description: '‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∏‡§°‡§º‡§ï ‡§™‡§∞ ‡§¨‡§°‡§º‡•á ‡§ó‡§°‡•ç‡§¢‡•á ‡§π‡•à‡§Ç ‡§ú‡§ø‡§∏‡§∏‡•á ‡§¶‡•Å‡§∞‡•ç‡§ò‡§ü‡§®‡§æ ‡§π‡•ã ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à',
          category: 'road',
          status: 'in_progress',
          priority: 1,
          location: '‡§≤‡§æ‡§ú‡§™‡§§ ‡§®‡§ó‡§∞, ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
          reporterName: '‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§™‡§ü‡•á‡§≤',
          createdAt: '2025-01-07T14:20:00Z',
          department: '‡§™‡•Ä‡§°‡§¨‡•ç‡§≤‡•ç‡§Ø‡•Ç‡§°‡•Ä'
        },
        {
          id: '3',
          title: '‡§ï‡§ö‡§∞‡§æ ‡§∏‡§Ç‡§ó‡•ç‡§∞‡§π ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Å‡§Ü',
          description: '‡§™‡§ø‡§õ‡§≤‡•á 4 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§∏‡•á ‡§ï‡§ö‡§∞‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§â‡§†‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à',
          category: 'sanitation',
          status: 'resolved',
          priority: 2,
          location: '‡§∏‡§æ‡§ï‡•á‡§§, ‡§®‡§à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
          reporterName: '‡§Ö‡§Æ‡§ø‡§§ ‡§ï‡•Å‡§Æ‡§æ‡§∞',
          createdAt: '2025-01-06T09:15:00Z',
          department: '‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ'
        },
        {
          id: '4',
          title: '‡§™‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§≤‡•Ä‡§ï‡•á‡§ú',
          description: '‡§™‡§æ‡§á‡§™ ‡§´‡§ü ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§™‡§æ‡§®‡•Ä ‡§¨‡§∞‡•ç‡§¨‡§æ‡§¶ ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à',
          category: 'water',
          status: 'acknowledged',
          priority: 1,
          location: '‡§µ‡§∏‡§Ç‡§§ ‡§ï‡•Å‡§Ç‡§ú, ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
          reporterName: '‡§∏‡•Å‡§®‡•Ä‡§§‡§æ ‡§ú‡•Ä',
          createdAt: '2025-01-08T16:30:00Z',
          department: '‡§ú‡§≤ ‡§¨‡•ã‡§∞‡•ç‡§°'
        },
        {
          id: '5',
          title: '‡§ü‡•ç‡§∞‡•à‡§´‡§ø‡§ï ‡§∏‡§ø‡§ó‡•ç‡§®‡§≤ ‡§ñ‡§∞‡§æ‡§¨',
          description: '‡§ö‡•å‡§∞‡§æ‡§π‡•á ‡§™‡§∞ ‡§ü‡•ç‡§∞‡•à‡§´‡§ø‡§ï ‡§≤‡§æ‡§á‡§ü ‡§ï‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∞‡§π‡•Ä',
          category: 'other',
          status: 'assigned',
          priority: 1,
          location: '‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ ‡§ó‡•á‡§ü, ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä',
          reporterName: '‡§∞‡§æ‡§ú‡•á‡§∂ ‡§ó‡•Å‡§™‡•ç‡§§‡§æ',
          createdAt: '2025-01-08T08:45:00Z',
          department: '‡§ü‡•ç‡§∞‡•à‡§´‡§ø‡§ï ‡§™‡•Å‡§≤‡§ø‡§∏'
        }
      ]);
      setLoading(false);
    }, 1000);
  }, []);

  const getStats = () => {
    const total = issues.length;
    const pending = issues.filter(i => ['submitted', 'acknowledged', 'assigned', 'in_progress'].includes(i.status)).length;
    const resolved = issues.filter(i => i.status === 'resolved').length;
    const high_priority = issues.filter(i => i.priority === 1 && i.status !== 'resolved').length;
    
    return { total, pending, resolved, high_priority };
  };

  const filteredIssues = issues.filter(issue => {
    const matchesSearch = issue.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         issue.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         issue.location.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesStatus = filter.status === 'all' || issue.status === filter.status;
    const matchesCategory = filter.category === 'all' || issue.category === filter.category;
    const matchesPriority = filter.priority === 'all' || issue.priority.toString() === filter.priority;
    
    return matchesSearch && matchesStatus && matchesCategory && matchesPriority;
  });

  const stats = getStats();

  const getStatusColor = (status: string) => {
    const colors = {
      submitted: 'text-blue-600 bg-blue-50 border-blue-200',
      acknowledged: 'text-yellow-600 bg-yellow-50 border-yellow-200',
      assigned: 'text-purple-600 bg-purple-50 border-purple-200',
      in_progress: 'text-orange-600 bg-orange-50 border-orange-200',
      resolved: 'text-green-600 bg-green-50 border-green-200',
      rejected: 'text-red-600 bg-red-50 border-red-200'
    };
    return colors[status as keyof typeof colors] || colors.submitted;
  };

  const getPriorityColor = (priority: number) => {
    switch (priority) {
      case 1: return 'border-l-4 border-red-500';
      case 2: return 'border-l-4 border-yellow-500';
      case 3: return 'border-l-4 border-green-500';
      default: return 'border-l-4 border-gray-300';
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-orange-600 mx-auto mb-4"></div>
          <p className="text-gray-600">{t('common.loading')}</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <main className="px-4 py-8 mx-auto max-w-7xl lg:px-8">
        {/* Welcome Section */}
        <div className="mb-8">
          <h1 className="text-2xl font-bold text-gray-900 mb-2">
            ‡§®‡§Æ‡§∏‡•ç‡§§‡•á, {user?.name}! üôè
          </h1>
          <p className="text-gray-600">‡§™‡•ç‡§∞‡§∂‡§æ‡§∏‡§®‡§ø‡§ï ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° - ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§∏‡•á‡§µ‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®</p>
        </div>

        {/* Stats Cards */}
        <div className="grid gap-6 mb-8 md:grid-cols-4">
          <div className="p-6 bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600 mb-1">‡§ï‡•Å‡§≤ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç</p>
                <p className="text-3xl font-bold text-gray-900">{stats.total}</p>
              </div>
              <div className="p-3 bg-blue-100 rounded-xl">
                <BarChart3 className="w-6 h-6 text-blue-600" />
              </div>
            </div>
            <div className="mt-4 flex items-center text-sm text-blue-600">
              <TrendingUp className="w-4 h-4 mr-1" />
              <span>+12% ‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á</span>
            </div>
          </div>

          <div className="p-6 bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600 mb-1">‡§≤‡§Ç‡§¨‡§ø‡§§ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç</p>
                <p className="text-3xl font-bold text-orange-600">{stats.pending}</p>
              </div>
              <div className="p-3 bg-orange-100 rounded-xl">
                <Clock className="w-6 h-6 text-orange-600" />
              </div>
            </div>
            <div className="mt-4 text-sm text-gray-500">
              ‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§®‡•á ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ
            </div>
          </div>

          <div className="p-6 bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600 mb-1">‡§π‡§≤ ‡§ï‡•Ä ‡§ó‡§à</p>
                <p className="text-3xl font-bold text-green-600">{stats.resolved}</p>
              </div>
              <div className="p-3 bg-green-100 rounded-xl">
                <Users className="w-6 h-6 text-green-600" />
              </div>
            </div>
            <div className="mt-4 flex items-center text-sm text-green-600">
              <span>90% ‡§∞‡§ø‡§ú‡•ã‡§≤‡•ç‡§Ø‡•Ç‡§∂‡§® ‡§¶‡§∞</span>
            </div>
          </div>

          <div className="p-6 bg-white rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600 mb-1">‡§â‡§ö‡•ç‡§ö ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ</p>
                <p className="text-3xl font-bold text-red-600">{stats.high_priority}</p>
              </div>
              <div className="p-3 bg-red-100 rounded-xl">
                <Clock className="w-6 h-6 text-red-600" />
              </div>
            </div>
            <div className="mt-4 text-sm text-red-600">
              ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à ‡§ö‡§æ‡§π‡§ø‡§è
            </div>
          </div>
        </div>

        {/* Filters and Search */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-8">
          <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
            <div className="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
                <input
                  type="text"
                  placeholder="‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§ñ‡•ã‡§ú‡•á‡§Ç..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10 pr-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 w-full sm:w-64"
                />
              </div>
              
              <select
                value={filter.status}
                onChange={(e) => setFilter(prev => ({ ...prev, status: e.target.value }))}
                className="px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500"
              >
                <option value="all">‡§∏‡§≠‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡§æ‡§Ç</option>
                <option value="submitted">‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§</option>
                <option value="acknowledged">‡§∏‡•ç‡§µ‡•Ä‡§ï‡•É‡§§</option>
                <option value="assigned">‡§∏‡•å‡§Ç‡§™‡§æ ‡§ó‡§Ø‡§æ</option>
                <option value="in_progress">‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Æ‡•á‡§Ç</option>
                <option value="resolved">‡§π‡§≤</option>
                <option value="rejected">‡§Ö‡§∏‡•ç‡§µ‡•Ä‡§ï‡•É‡§§</option>
              </select>

              <select
                value={filter.category}
                onChange={(e) => setFilter(prev => ({ ...prev, category: e.target.value }))}
                className="px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500"
              >
                <option value="all">‡§∏‡§≠‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡§ø‡§Ø‡§æ‡§Ç</option>
                <option value="sanitation">‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ</option>
                <option value="road">‡§∏‡§°‡§º‡§ï</option>
                <option value="streetlight">‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ü ‡§≤‡§æ‡§á‡§ü</option>
                <option value="water">‡§™‡§æ‡§®‡•Ä</option>
                <option value="other">‡§Ö‡§®‡•ç‡§Ø</option>
              </select>

              <select
                value={filter.priority}
                onChange={(e) => setFilter(prev => ({ ...prev, priority: e.target.value }))}
                className="px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500"
              >
                <option value="all">‡§∏‡§≠‡•Ä ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ‡§è‡§Ç</option>
                <option value="1">‡§â‡§ö‡•ç‡§ö ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ</option>
                <option value="2">‡§Æ‡§ß‡•ç‡§Ø‡§Æ ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ</option>
                <option value="3">‡§ï‡§Æ ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ</option>
              </select>
            </div>

            <button className="flex items-center space-x-2 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors">
              <Download className="w-4 h-4" />
              <span>‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç</span>
            </button>
          </div>
        </div>

        {/* Issues Table */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-100">
          <div className="p-6 border-b border-gray-100">
            <div className="flex items-center justify-between">
              <h2 className="text-lg font-semibold text-gray-900">‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç</h2>
              <span className="text-sm text-gray-600">{filteredIssues.length} ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç ‡§Æ‡§ø‡§≤‡•Ä‡§Ç</span>
            </div>
          </div>

          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü‡§∞</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§∂‡•ç‡§∞‡•á‡§£‡•Ä</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§∏‡•ç‡§•‡§ø‡§§‡§ø</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredIssues.map((issue) => (
                  <tr key={issue.id} className="hover:bg-gray-50 transition-colors">
                    <td className="px-6 py-4">
                      <div className={`${getPriorityColor(issue.priority)} pl-4`}>
                        <div className="font-medium text-gray-900 truncate max-w-xs">{issue.title}</div>
                        <div className="flex items-center text-sm text-gray-500 mt-1">
                          <MapPin className="w-3 h-3 mr-1" />
                          <span className="truncate">{issue.location}</span>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="text-sm font-medium text-gray-900">{issue.reporterName}</div>
                      <div className="text-sm text-gray-500">{issue.department}</div>
                    </td>
                    <td className="px-6 py-4">
                      <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                        {t(`category.${issue.category}`)}
                      </span>
                    </td>
                    <td className="px-6 py-4">
                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${getStatusColor(issue.status)}`}>
                        {t(`status.${issue.status}`)}
                      </span>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <div className={`w-2 h-2 rounded-full mr-2 ${
                          issue.priority === 1 ? 'bg-red-500' : 
                          issue.priority === 2 ? 'bg-yellow-500' : 'bg-green-500'
                        }`}></div>
                        <span className="text-sm text-gray-900">
                          {issue.priority === 1 ? '‡§â‡§ö‡•ç‡§ö' : issue.priority === 2 ? '‡§Æ‡§ß‡•ç‡§Ø‡§Æ' : '‡§ï‡§Æ'}
                        </span>
                      </div>
                    </td>
                    <td className="px-6 py-4 text-sm text-gray-500">
                      {new Date(issue.createdAt).toLocaleDateString('hi-IN')}
                    </td>
                    <td className="px-6 py-4">
                      <button
                        onClick={() => navigate(`/issue/${issue.id}`)}
                        className="text-orange-600 hover:text-orange-800 text-sm font-medium"
                      >
                        ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡•á‡§ñ‡•á‡§Ç
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {filteredIssues.length === 0 && (
            <div className="text-center py-12">
              <Filter className="w-12 h-12 text-gray-400 mx-auto mb-4" />
              <p className="text-gray-600">‡§ï‡•ã‡§à ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä</p>
            </div>
          )}
        </div>

        {/* Quick Actions */}
        <div className="mt-8 grid gap-6 md:grid-cols-2">
          <div className="p-6 bg-gradient-to-br from-orange-50 to-orange-100 rounded-xl border border-orange-200">
            <h3 className="font-semibold text-gray-900 mb-3">‡§µ‡§ø‡§≠‡§æ‡§ó ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§®</h3>
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§µ‡§ø‡§≠‡§æ‡§ó</span>
                <span className="text-sm font-medium text-green-600">85% ‡§∞‡§ø‡§ú‡•ã‡§≤‡•ç‡§Ø‡•Ç‡§∂‡§®</span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">‡§™‡•Ä‡§°‡§¨‡•ç‡§≤‡•ç‡§Ø‡•Ç‡§°‡•Ä</span>
                <span className="text-sm font-medium text-yellow-600">72% ‡§∞‡§ø‡§ú‡•ã‡§≤‡•ç‡§Ø‡•Ç‡§∂‡§®</span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">‡§ú‡§≤ ‡§¨‡•ã‡§∞‡•ç‡§°</span>
                <span className="text-sm font-medium text-red-600">65% ‡§∞‡§ø‡§ú‡•ã‡§≤‡•ç‡§Ø‡•Ç‡§∂‡§®</span>
              </div>
            </div>
          </div>

          <div className="p-6 bg-gradient-to-br from-green-50 to-green-100 rounded-xl border border-green-200">
            <h3 className="font-semibold text-gray-900 mb-3">‡§Ü‡§ú ‡§ï‡•Ä ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø</h3>
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">‡§®‡§à ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡•á‡§Ç</span>
                <span className="text-sm font-medium text-blue-600">12</span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">‡§π‡§≤ ‡§ï‡•Ä ‡§ó‡§à</span>
                <span className="text-sm font-medium text-green-600">8</span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">‡§î‡§∏‡§§ ‡§∏‡§Æ‡§Ø</span>
                <span className="text-sm font-medium text-orange-600">36 ‡§ò‡§Ç‡§ü‡•á</span>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default AdminDashboard;